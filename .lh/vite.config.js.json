{
    "sourceFile": "vite.config.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1646384783229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1646385007229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n     cors: true, // 允许跨域\n \n     // 设置代理，根据我们项目实际情况配置\n     proxy: {\n-      '/api': {\n+      '/blog': {\n         target: 'http://127.0.0.1:8000',\n         changeOrigin: true,\n         secure: false,\n         // rewrite: path => path.replace(/^/api /, '')\n"
                },
                {
                    "date": 1646912538200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,10 @@\n import { defineConfig } from 'vite'\n import vue from '@vitejs/plugin-vue'\n import { resolve } from 'path'\n+import AutoImport from 'unplugin-auto-import/vite'\n+import Components from 'unplugin-vue-components/vite'\n+import { ElementPlusResolver } from 'unplugin-vue-components/resolvers'\n \n const pathResolve = (dir) => resolve(__dirname, dir)\n \n // https://vitejs.dev/config/\n"
                },
                {
                    "date": 1646913128663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,16 @@\n const pathResolve = (dir) => resolve(__dirname, dir)\n \n // https://vitejs.dev/config/\n export default defineConfig({\n-  plugins: [vue()],\n+  plugins: [vue(),\n+  AutoImport({\n+    resolvers: [ElementPlusResolver()],\n+  }),\n+  Components({\n+    resolvers: [ElementPlusResolver()],\n+  }),\n+  ],\n   build: {\n     outDir: 'dist',     // 指定打包路径，默认为项目根目录下的 dist 目录\n     terserOptions: {\n       compress: {\n"
                },
                {
                    "date": 1646917502762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import vue from '@vitejs/plugin-vue'\n import { resolve } from 'path'\n import AutoImport from 'unplugin-auto-import/vite'\n import Components from 'unplugin-vue-components/vite'\n+import viteCompression from 'vite-plugin-compression';\n import { ElementPlusResolver } from 'unplugin-vue-components/resolvers'\n \n const pathResolve = (dir) => resolve(__dirname, dir)\n \n"
                },
                {
                    "date": 1646917526740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,8 @@\n import vue from '@vitejs/plugin-vue'\n import { resolve } from 'path'\n import AutoImport from 'unplugin-auto-import/vite'\n import Components from 'unplugin-vue-components/vite'\n-import viteCompression from 'vite-plugin-compression';\n import { ElementPlusResolver } from 'unplugin-vue-components/resolvers'\n \n const pathResolve = (dir) => resolve(__dirname, dir)\n \n"
                },
                {
                    "date": 1647517607028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n         drop_debugger: true // 生产环境去除 debugger\n       },\n     },\n     chunkSizeWarningLimit: 1500 // chunk 大小警告的限制（以 kbs 为单位）\n+    , cssCodeSplit: false,\n   },\n   resolve: {\n     alias: {\n       '@': pathResolve('./src'), // 设置 `@` 指向 `src` 目录\n@@ -37,18 +38,20 @@\n     },\n   },\n   base: './', // 设置公共基础路径\n   server: {\n+    // hostname: 'localhost',\n     port: 4000, // 设置服务启动端口号\n     open: true, // 设置服务启动时是否自动打开浏览器\n     cors: true, // 允许跨域\n-\n+    host: 'localhost',\n+    // base: './',\n     // 设置代理，根据我们项目实际情况配置\n     proxy: {\n       '/blog': {\n-        target: 'http://127.0.0.1:8000',\n+        target: 'http://127.0.0.1:4000',\n         changeOrigin: true,\n-        secure: false,\n+        // secure: false,\n         // rewrite: path => path.replace(/^/api /, '')\n       }\n     }\n   }\n"
                },
                {
                    "date": 1647517612596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,10 +25,10 @@\n         drop_console: true, // 生产环境去除 console\n         drop_debugger: true // 生产环境去除 debugger\n       },\n     },\n-    chunkSizeWarningLimit: 1500 // chunk 大小警告的限制（以 kbs 为单位）\n-    , cssCodeSplit: false,\n+    chunkSizeWarningLimit: 1500,// chunk 大小警告的限制（以 kbs 为单位）\n+    cssCodeSplit: false,\n   },\n   resolve: {\n     alias: {\n       '@': pathResolve('./src'), // 设置 `@` 指向 `src` 目录\n"
                }
            ],
            "date": 1646384783229,
            "name": "Commit-0",
            "content": "import { defineConfig } from 'vite'\nimport vue from '@vitejs/plugin-vue'\nimport { resolve } from 'path'\n\nconst pathResolve = (dir) => resolve(__dirname, dir)\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [vue()],\n  build: {\n    outDir: 'dist',     // 指定打包路径，默认为项目根目录下的 dist 目录\n    terserOptions: {\n      compress: {\n        keep_infinity: true,  // 防止 Infinity 被压缩成 1/0，这可能会导致 Chrome 上的性能问题\n        drop_console: true, // 生产环境去除 console\n        drop_debugger: true // 生产环境去除 debugger\n      },\n    },\n    chunkSizeWarningLimit: 1500 // chunk 大小警告的限制（以 kbs 为单位）\n  },\n  resolve: {\n    alias: {\n      '@': pathResolve('./src'), // 设置 `@` 指向 `src` 目录\n      views: pathResolve('./src/views'),\n      components: pathResolve('./src/components'),\n      assets: pathResolve('./src/assets'),\n    },\n  },\n  base: './', // 设置公共基础路径\n  server: {\n    port: 4000, // 设置服务启动端口号\n    open: true, // 设置服务启动时是否自动打开浏览器\n    cors: true, // 允许跨域\n\n    // 设置代理，根据我们项目实际情况配置\n    proxy: {\n      '/api': {\n        target: 'http://127.0.0.1:8000',\n        changeOrigin: true,\n        secure: false,\n        // rewrite: path => path.replace(/^/api /, '')\n      }\n    }\n  }\n})\n\n"
        }
    ]
}